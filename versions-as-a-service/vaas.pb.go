// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vaas.proto

package vaas

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckoutRequest struct {
	Revision             string   `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckoutRequest) Reset()         { *m = CheckoutRequest{} }
func (m *CheckoutRequest) String() string { return proto.CompactTextString(m) }
func (*CheckoutRequest) ProtoMessage()    {}
func (*CheckoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{0}
}

func (m *CheckoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckoutRequest.Unmarshal(m, b)
}
func (m *CheckoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckoutRequest.Marshal(b, m, deterministic)
}
func (m *CheckoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckoutRequest.Merge(m, src)
}
func (m *CheckoutRequest) XXX_Size() int {
	return xxx_messageInfo_CheckoutRequest.Size(m)
}
func (m *CheckoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckoutRequest proto.InternalMessageInfo

func (m *CheckoutRequest) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

type CheckoutResponse struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckoutResponse) Reset()         { *m = CheckoutResponse{} }
func (m *CheckoutResponse) String() string { return proto.CompactTextString(m) }
func (*CheckoutResponse) ProtoMessage()    {}
func (*CheckoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{1}
}

func (m *CheckoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckoutResponse.Unmarshal(m, b)
}
func (m *CheckoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckoutResponse.Marshal(b, m, deterministic)
}
func (m *CheckoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckoutResponse.Merge(m, src)
}
func (m *CheckoutResponse) XXX_Size() int {
	return xxx_messageInfo_CheckoutResponse.Size(m)
}
func (m *CheckoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckoutResponse proto.InternalMessageInfo

func (m *CheckoutResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type CommitRequest struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{2}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CommitRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CommitResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{3}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Patch struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Patch                []byte   `protobuf:"bytes,2,opt,name=patch,proto3" json:"patch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Patch) Reset()         { *m = Patch{} }
func (m *Patch) String() string { return proto.CompactTextString(m) }
func (*Patch) ProtoMessage()    {}
func (*Patch) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{4}
}

func (m *Patch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patch.Unmarshal(m, b)
}
func (m *Patch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patch.Marshal(b, m, deterministic)
}
func (m *Patch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patch.Merge(m, src)
}
func (m *Patch) XXX_Size() int {
	return xxx_messageInfo_Patch.Size(m)
}
func (m *Patch) XXX_DiscardUnknown() {
	xxx_messageInfo_Patch.DiscardUnknown(m)
}

var xxx_messageInfo_Patch proto.InternalMessageInfo

func (m *Patch) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Patch) GetPatch() []byte {
	if m != nil {
		return m.Patch
	}
	return nil
}

type DiffRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiffRequest) Reset()         { *m = DiffRequest{} }
func (m *DiffRequest) String() string { return proto.CompactTextString(m) }
func (*DiffRequest) ProtoMessage()    {}
func (*DiffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{5}
}

func (m *DiffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiffRequest.Unmarshal(m, b)
}
func (m *DiffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiffRequest.Marshal(b, m, deterministic)
}
func (m *DiffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiffRequest.Merge(m, src)
}
func (m *DiffRequest) XXX_Size() int {
	return xxx_messageInfo_DiffRequest.Size(m)
}
func (m *DiffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiffRequest proto.InternalMessageInfo

func (m *DiffRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DiffRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type DiffResponse struct {
	Patches              []*Patch `protobuf:"bytes,1,rep,name=patches,proto3" json:"patches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiffResponse) Reset()         { *m = DiffResponse{} }
func (m *DiffResponse) String() string { return proto.CompactTextString(m) }
func (*DiffResponse) ProtoMessage()    {}
func (*DiffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{6}
}

func (m *DiffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiffResponse.Unmarshal(m, b)
}
func (m *DiffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiffResponse.Marshal(b, m, deterministic)
}
func (m *DiffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiffResponse.Merge(m, src)
}
func (m *DiffResponse) XXX_Size() int {
	return xxx_messageInfo_DiffResponse.Size(m)
}
func (m *DiffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiffResponse proto.InternalMessageInfo

func (m *DiffResponse) GetPatches() []*Patch {
	if m != nil {
		return m.Patches
	}
	return nil
}

type ApplyRequest struct {
	Revision             string   `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	Patches              []*Patch `protobuf:"bytes,2,rep,name=patches,proto3" json:"patches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyRequest) Reset()         { *m = ApplyRequest{} }
func (m *ApplyRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyRequest) ProtoMessage()    {}
func (*ApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{7}
}

func (m *ApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyRequest.Unmarshal(m, b)
}
func (m *ApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyRequest.Marshal(b, m, deterministic)
}
func (m *ApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest.Merge(m, src)
}
func (m *ApplyRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyRequest.Size(m)
}
func (m *ApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest proto.InternalMessageInfo

func (m *ApplyRequest) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *ApplyRequest) GetPatches() []*Patch {
	if m != nil {
		return m.Patches
	}
	return nil
}

type ApplyResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyResponse) Reset()         { *m = ApplyResponse{} }
func (m *ApplyResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyResponse) ProtoMessage()    {}
func (*ApplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{8}
}

func (m *ApplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyResponse.Unmarshal(m, b)
}
func (m *ApplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyResponse.Marshal(b, m, deterministic)
}
func (m *ApplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyResponse.Merge(m, src)
}
func (m *ApplyResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyResponse.Size(m)
}
func (m *ApplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyResponse proto.InternalMessageInfo

func (m *ApplyResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type IdentifyRequest struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint64   `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Cid                  uint64   `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentifyRequest) Reset()         { *m = IdentifyRequest{} }
func (m *IdentifyRequest) String() string { return proto.CompactTextString(m) }
func (*IdentifyRequest) ProtoMessage()    {}
func (*IdentifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{9}
}

func (m *IdentifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyRequest.Unmarshal(m, b)
}
func (m *IdentifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyRequest.Marshal(b, m, deterministic)
}
func (m *IdentifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyRequest.Merge(m, src)
}
func (m *IdentifyRequest) XXX_Size() int {
	return xxx_messageInfo_IdentifyRequest.Size(m)
}
func (m *IdentifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyRequest proto.InternalMessageInfo

func (m *IdentifyRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *IdentifyRequest) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *IdentifyRequest) GetCid() uint64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

type IdentifyResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentifyResponse) Reset()         { *m = IdentifyResponse{} }
func (m *IdentifyResponse) String() string { return proto.CompactTextString(m) }
func (*IdentifyResponse) ProtoMessage()    {}
func (*IdentifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6d0850c8612ba4, []int{10}
}

func (m *IdentifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyResponse.Unmarshal(m, b)
}
func (m *IdentifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyResponse.Marshal(b, m, deterministic)
}
func (m *IdentifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyResponse.Merge(m, src)
}
func (m *IdentifyResponse) XXX_Size() int {
	return xxx_messageInfo_IdentifyResponse.Size(m)
}
func (m *IdentifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyResponse proto.InternalMessageInfo

func (m *IdentifyResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckoutRequest)(nil), "vaas.CheckoutRequest")
	proto.RegisterType((*CheckoutResponse)(nil), "vaas.CheckoutResponse")
	proto.RegisterType((*CommitRequest)(nil), "vaas.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "vaas.CommitResponse")
	proto.RegisterType((*Patch)(nil), "vaas.Patch")
	proto.RegisterType((*DiffRequest)(nil), "vaas.DiffRequest")
	proto.RegisterType((*DiffResponse)(nil), "vaas.DiffResponse")
	proto.RegisterType((*ApplyRequest)(nil), "vaas.ApplyRequest")
	proto.RegisterType((*ApplyResponse)(nil), "vaas.ApplyResponse")
	proto.RegisterType((*IdentifyRequest)(nil), "vaas.IdentifyRequest")
	proto.RegisterType((*IdentifyResponse)(nil), "vaas.IdentifyResponse")
}

func init() { proto.RegisterFile("vaas.proto", fileDescriptor_0a6d0850c8612ba4) }

var fileDescriptor_0a6d0850c8612ba4 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x55, 0x93, 0x34, 0x5b, 0xa6, 0xd9, 0xdd, 0xe2, 0x2d, 0x55, 0x94, 0x53, 0x65, 0x09, 0x51,
	0x55, 0xb4, 0x82, 0x56, 0x3d, 0xf4, 0x88, 0x8a, 0x84, 0xb8, 0x81, 0x91, 0xb8, 0x87, 0xc4, 0x69,
	0x2d, 0x48, 0x1c, 0x62, 0x27, 0x12, 0x7f, 0xc2, 0xe7, 0x22, 0x3b, 0x76, 0x9b, 0x46, 0xa2, 0xda,
	0xdb, 0xcc, 0x9b, 0x97, 0xf7, 0x66, 0xc6, 0x13, 0x80, 0x26, 0x8e, 0xc5, 0xba, 0xac, 0xb8, 0xe4,
	0xc8, 0x53, 0x31, 0x5e, 0xc1, 0xe3, 0xe1, 0x44, 0x93, 0x9f, 0xbc, 0x96, 0x84, 0xfe, 0xae, 0xa9,
	0x90, 0x28, 0x82, 0x51, 0x45, 0x1b, 0x26, 0x18, 0x2f, 0xc2, 0xc1, 0x7c, 0xb0, 0x78, 0x41, 0xce,
	0x39, 0x7e, 0x0b, 0x93, 0x0b, 0x5d, 0x94, 0xbc, 0x10, 0x14, 0x85, 0x70, 0x97, 0xf0, 0x42, 0xd2,
	0x42, 0x6a, 0x7a, 0x40, 0x6c, 0x8a, 0x0f, 0x70, 0x7f, 0xe0, 0x79, 0xce, 0xce, 0xd2, 0xff, 0xa5,
	0xaa, 0x4a, 0x4e, 0x85, 0x88, 0x8f, 0x34, 0x74, 0xb4, 0xa7, 0x4d, 0xf1, 0x12, 0x1e, 0xac, 0xc8,
	0xc5, 0xb0, 0xa1, 0x55, 0xa7, 0x3f, 0x9b, 0xe2, 0x1d, 0x0c, 0xbf, 0xc4, 0x32, 0x39, 0xa1, 0x19,
	0xf8, 0x3c, 0xcb, 0x04, 0x6d, 0x7d, 0x5c, 0x62, 0x32, 0x34, 0x85, 0x61, 0xa9, 0x08, 0xda, 0x24,
	0x20, 0x6d, 0x82, 0xdf, 0xc3, 0xf8, 0x23, 0xcb, 0x32, 0xdb, 0x25, 0x02, 0x2f, 0xab, 0x78, 0x6e,
	0xc4, 0x75, 0x8c, 0x1e, 0xc0, 0x91, 0xdc, 0xb4, 0xe6, 0x48, 0x8e, 0x77, 0x10, 0xb4, 0x9f, 0x98,
	0x9e, 0x5e, 0xc3, 0x9d, 0xd6, 0xa2, 0x22, 0x1c, 0xcc, 0xdd, 0xc5, 0x78, 0x33, 0x5e, 0xeb, 0x5d,
	0xeb, 0x76, 0x88, 0xad, 0xe1, 0xaf, 0x10, 0x7c, 0x28, 0xcb, 0x5f, 0x7f, 0x9e, 0xb1, 0xeb, 0xae,
	0xa4, 0x73, 0x43, 0xf2, 0x0d, 0xdc, 0x1b, 0x49, 0xd3, 0xca, 0x0c, 0x7c, 0x21, 0x63, 0x59, 0x0b,
	0xa3, 0x68, 0x32, 0xfc, 0x09, 0x1e, 0x3f, 0xa7, 0xb4, 0x90, 0x2c, 0x3b, 0xdb, 0x4f, 0xc0, 0xad,
	0x59, 0xaa, 0x79, 0x1e, 0x51, 0xa1, 0x42, 0x8e, 0x2c, 0xd5, 0x83, 0x7a, 0x44, 0x85, 0x0a, 0x49,
	0x58, 0x1a, 0xba, 0x2d, 0x92, 0xb0, 0x14, 0x2f, 0x61, 0x72, 0x11, 0xba, 0x6d, 0xba, 0xf9, 0xeb,
	0x00, 0x7c, 0x8f, 0xe3, 0x6f, 0xb4, 0x6a, 0x58, 0x42, 0xd1, 0x1e, 0x46, 0xf6, 0x7e, 0xd0, 0xab,
	0x76, 0x9c, 0xde, 0xf9, 0x45, 0xb3, 0x3e, 0x6c, 0x1c, 0xb6, 0xe0, 0xb7, 0x77, 0x80, 0x9e, 0x0c,
	0xa3, 0x7b, 0x5a, 0xd1, 0xf4, 0x1a, 0x34, 0x1f, 0xad, 0xc0, 0x53, 0xcf, 0x84, 0x5e, 0xb6, 0xd5,
	0xce, 0x2b, 0x47, 0xa8, 0x0b, 0x19, 0xfa, 0x3b, 0x18, 0xea, 0x5d, 0x22, 0x53, 0xec, 0xbe, 0x55,
	0xf4, 0x74, 0x85, 0x99, 0x2f, 0xf6, 0x30, 0xb2, 0xbb, 0xb0, 0x03, 0xf5, 0x96, 0x6c, 0x07, 0xea,
	0xaf, 0xec, 0x87, 0xaf, 0xff, 0xc3, 0xed, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xed, 0xb1,
	0x96, 0x95, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VaaServiceClient is the client API for VaaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VaaServiceClient interface {
	Checkout(ctx context.Context, in *CheckoutRequest, opts ...grpc.CallOption) (*CheckoutResponse, error)
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	Diff(ctx context.Context, in *DiffRequest, opts ...grpc.CallOption) (*DiffResponse, error)
	Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*ApplyResponse, error)
	Identify(ctx context.Context, in *IdentifyRequest, opts ...grpc.CallOption) (*IdentifyResponse, error)
}

type vaaServiceClient struct {
	cc *grpc.ClientConn
}

func NewVaaServiceClient(cc *grpc.ClientConn) VaaServiceClient {
	return &vaaServiceClient{cc}
}

func (c *vaaServiceClient) Checkout(ctx context.Context, in *CheckoutRequest, opts ...grpc.CallOption) (*CheckoutResponse, error) {
	out := new(CheckoutResponse)
	err := c.cc.Invoke(ctx, "/vaas.VaaService/Checkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vaaServiceClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/vaas.VaaService/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vaaServiceClient) Diff(ctx context.Context, in *DiffRequest, opts ...grpc.CallOption) (*DiffResponse, error) {
	out := new(DiffResponse)
	err := c.cc.Invoke(ctx, "/vaas.VaaService/Diff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vaaServiceClient) Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*ApplyResponse, error) {
	out := new(ApplyResponse)
	err := c.cc.Invoke(ctx, "/vaas.VaaService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vaaServiceClient) Identify(ctx context.Context, in *IdentifyRequest, opts ...grpc.CallOption) (*IdentifyResponse, error) {
	out := new(IdentifyResponse)
	err := c.cc.Invoke(ctx, "/vaas.VaaService/Identify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VaaServiceServer is the server API for VaaService service.
type VaaServiceServer interface {
	Checkout(context.Context, *CheckoutRequest) (*CheckoutResponse, error)
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
	Diff(context.Context, *DiffRequest) (*DiffResponse, error)
	Apply(context.Context, *ApplyRequest) (*ApplyResponse, error)
	Identify(context.Context, *IdentifyRequest) (*IdentifyResponse, error)
}

// UnimplementedVaaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVaaServiceServer struct {
}

func (*UnimplementedVaaServiceServer) Checkout(ctx context.Context, req *CheckoutRequest) (*CheckoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Checkout not implemented")
}
func (*UnimplementedVaaServiceServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedVaaServiceServer) Diff(ctx context.Context, req *DiffRequest) (*DiffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Diff not implemented")
}
func (*UnimplementedVaaServiceServer) Apply(ctx context.Context, req *ApplyRequest) (*ApplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}
func (*UnimplementedVaaServiceServer) Identify(ctx context.Context, req *IdentifyRequest) (*IdentifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Identify not implemented")
}

func RegisterVaaServiceServer(s *grpc.Server, srv VaaServiceServer) {
	s.RegisterService(&_VaaService_serviceDesc, srv)
}

func _VaaService_Checkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VaaServiceServer).Checkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaas.VaaService/Checkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VaaServiceServer).Checkout(ctx, req.(*CheckoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VaaService_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VaaServiceServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaas.VaaService/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VaaServiceServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VaaService_Diff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VaaServiceServer).Diff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaas.VaaService/Diff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VaaServiceServer).Diff(ctx, req.(*DiffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VaaService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VaaServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaas.VaaService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VaaServiceServer).Apply(ctx, req.(*ApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VaaService_Identify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VaaServiceServer).Identify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaas.VaaService/Identify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VaaServiceServer).Identify(ctx, req.(*IdentifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VaaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vaas.VaaService",
	HandlerType: (*VaaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Checkout",
			Handler:    _VaaService_Checkout_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _VaaService_Commit_Handler,
		},
		{
			MethodName: "Diff",
			Handler:    _VaaService_Diff_Handler,
		},
		{
			MethodName: "Apply",
			Handler:    _VaaService_Apply_Handler,
		},
		{
			MethodName: "Identify",
			Handler:    _VaaService_Identify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vaas.proto",
}
